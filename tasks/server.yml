---
- name: Install psycopg2 to create database if necessary
  pip:
    name: "{{ item }}"
  with_items:
    - psycopg2
  when: kong_database|lower == "postgres" and kong_pg_root_user and kong_pg_root_password

- name: Ensure Kong postgres DB database
  postgresql_db:
    name: "{{ kong_pg_database }}"
    state: present
    login_host: "{{ kong_pg_host }}"
    login_user: "{{ kong_pg_root_user }}"
    login_password: "{{ kong_pg_root_password }}"
  register: create_db
  when: kong_database|lower == "postgres" and kong_pg_root_user and kong_pg_root_password

- name: Ensure Kong DB user
  postgresql_user:
    db: "{{ kong_pg_database }}"
    login_host: "{{ kong_pg_host }}"
    login_user: "{{ kong_pg_root_user }}"
    login_password: "{{ kong_pg_root_password }}"
    name: "{{ kong_pg_user }}"
    password: "{{ kong_pg_password }}"
    priv: "ALL"
    state: present
  when: kong_database|lower == "postgres" and kong_pg_root_user and kong_pg_root_password and create_db.changed

- name: Download kong deb package
  get_url: url="{{ kong_deb_pkg_url }}" dest=/var/tmp validate_certs=no

- name: Install kong prerequisites
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ kong_prereqs }}"

- name: Install kong
  apt:
    deb:   "/var/tmp/{{ kong_deb_pkg }}"
    state: present

- name: Ensure kong nginx working dir has appropriate permissions
  file:
    path:  "{{ kong_nginx_working_dir }}"
    state: directory
    owner: www-data
    group: www-data
    mode:  0755

- name: Create configurated log dir
  file:
    path: "{{ kong_log_dir }}"
    state: directory
    owner: www-data
    group: www-data

- name: Sylink to real log dir
  file:
    src: "{{ kong_log_dir }}"
    dest: "{{ kong_nginx_working_dir }}/logs"
    state: link
    owner: www-data
    group: www-data

- name: Create logrotate config for kong logs
  template:
    src:  logrotate.j2
    dest: /etc/logrotate.d/kong
    owner: root
    group: root
    mode: 0644
  tags: logrotate

- name: "Create logrotate symlink to cron.hourly"
  file:
    src: /etc/cron.daily/logrotate
    dest: /etc/cron.hourly/logrotate
    owner: root
    group: root
    state: link
  tags: logrotate

- name: Create kong config file
  template:
    src:  kong.conf.j2
    dest: "{{ kong_conf_dir }}/kong.conf"
    owner: root
    group: root
    mode:  0644
  notify:
    - validate kong
    - reload kong
  tags: kong-config

- name: Create kong custom nginx config file
  template:
    src:  custom-nginx.template.j2
    dest: "{{ kong_conf_dir }}/custom-nginx.template"
    owner: root
    group: root
    mode:  0644
  notify:
    - validate kong
    - reload kong

- name: Create kong systemd script
  template:
    dest: /etc/systemd/system/kong.service
    mode: 0755
    src: systemd.j2
  tags:
    - kong-systemd

- name: Run kong migrations to keep database updated
  shell: >
      /usr/local/bin/kong migrations up -c {{ kong_conf_dir }}/kong.conf --v

- name: Ensure kong service is enabled
  service:
    name: kong
    state: reloaded
    enabled: yes
  tags:
    - kong-systemd

- name: Ensure Kong is running
  service:
    name: kong
    state: started

- name: Install common utilities to have in kong nodes
  pip:
    name: "{{ item }}"
  with_items:
    - httpie
    - kong-cli
