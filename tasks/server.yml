---
- name: Copying limits.conf
  copy:
    src: "limits.conf"
    dest: "/etc/security/limits.conf"
    owner: root
    group: root
    mode: 0644

- name: Download kong deb package
  get_url: url="{{ kong_deb_pkg_url }}" dest=/var/tmp validate_certs=no

- name: Install kong prerequisites
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ kong_prereqs }}"

- name: Install kong
  apt:
    deb:   "/var/tmp/kong-community-edition-{{ kong_version }}.{{ ansible_distribution_release }}.all.deb"
    state: present

- name: Ensure kong nginx working dir has appropriate permissions
  file:
    path:  "{{ kong_nginx_working_dir }}"
    state: directory
    owner: www-data
    group: www-data
    mode:  0755     # vanilla install gives mode=0777 but could it be mode=0755?

- name: Ensure log directory owned by nginx user
  become: yes
  file:
    path: "{{ kong_log_dir }}"
    state: directory
    owner: www-data
    group: www-data

- name: Create logrotate config for kong logs
  template:
    src:  logrotate.j2
    dest: /etc/logrotate.d/kong
    owner: root
    group: root
    mode: 0644

- name: Create kong config file
  template:
    src:  kong.conf.j2
    dest: "{{ kong_conf_dir }}/kong.conf"
    owner: root
    group: root
    mode:  0644
  notify:
    - validate kong
    - restart kong

- name: Create kong custom nginx config file
  template:
    src:  custom-nginx.template.j2
    dest: "{{ kong_conf_dir }}/custom-nginx.template"
    owner: root
    group: root
    mode:  0644
  notify:
    - validate kong
    - reload kong

- name: Create kong systemd script
  template:
    dest: /etc/systemd/system/kong.service
    mode: 0755
    src: systemd.j2

- name: Ensure kong service is enabled
  service:
    name: kong
    enabled: yes

- name: Ensure Kong is running
  service:
    name: kong
    state: started
